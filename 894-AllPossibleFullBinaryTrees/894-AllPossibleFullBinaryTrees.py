            for k in range(1, n, 2):
                left=dfs(k)
                return [TreeNode()]
            result=[]
                right=dfs(n-1-k) 
                for i in left:
            if n==1:
                return []
            if n%2==0:
        def dfs(n):
    def allPossibleFBT(self, n: int) -> List[Optional[TreeNode]]:
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
                    for j in right:
                        result.append(TreeNode(0, i, j))
            return result
        return dfs(n)

        
7
